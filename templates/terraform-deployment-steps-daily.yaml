# This Azure pipeline YAML is a step template that will perform:
# - update input template with custom JSON
# - Deployment for the current test case

parameters:
#####################################################################
# Eg:  testCaseName: current test case name eg: sap-reuseVNET-777    #
#####################################################################
    testCaseName: ''
    osImage: ''
steps:
  - script: |
      echo "=== Install fixed version of Terraform ==="
      wget -q https://releases.hashicorp.com/terraform/0.12.29/terraform_0.12.29_linux_amd64.zip
      unzip terraform_0.12.29_linux_amd64.zip -d terraform_0.12.29/
      sudo mv terraform_0.12.29/terraform /usr/local/bin/terraform
      terraform --version
    displayName: "Install terraform 0.12.29"
  - script: |
      echo '##vso[task.setvariable variable=agent_ip]$(curl -s https://ipinfo.io/json | jq -r .ip)'
    displayName: "Set agent ip"
  - script: |
      ssh-keygen -b 4096 -t rsa -f /tmp/sshkey -q -N ""
      echo "Update ${{parameters.testCaseName}}.json"
      cd templates/tempGen
      sed -i "s|var-sap-user|$(hana-smp-nancyc-username)|g" template-daily.json
      sed -i "s|var-sap-password|$(hana-smp-nancyc-password)|g" template-daily.json
      sed -i "s|var-os-image|${{parameters.osImage}}|g" template-daily.json
      sed -i "s|var-agent-ip|$(agent_ip)|g" template-daily.json
      cat template-daily.json
      python tempGen.py --custom=${{parameters.testCaseName}}.json --template=template-daily.json --output=${{parameters.testCaseName}}.json
      echo "Input JSON for terraform ready:"
      cat ${{parameters.testCaseName}}.json
    displayName: "Prepare input JSON"
  - script: |
      cd deploy/terraform
      mkdir default
      cat <<- EOF > default/export-clustering-sp-details.sh
        export SAP_HANA_FENCING_AGENT_SUBSCRIPTION_ID=$(landscape-subscription)
        export SAP_HANA_FENCING_AGENT_TENANT_ID=$(landscape-tenant)
        export SAP_HANA_FENCING_AGENT_CLIENT_ID=$(hana-pipeline-spn-id)
        export SAP_HANA_FENCING_AGENT_CLIENT_SECRET=$(hana-pipeline-spn-pw)
      EOF
    displayName: 'Prepare SP for fencing agent'
  - script: |
      echo "Terraform Deployment in Progress..."
      cd deploy/terraform
      terraform -version
      terraform init
      terraform apply -auto-approve -var-file=../../templates/tempGen/${{parameters.testCaseName}}.json
    displayName: 'Terraform Deployment'
    env:
      TF_VAR_azure_service_principal_id: $(hana-pipeline-spn-id)
      TF_VAR_azure_service_principal_pw: $(hana-pipeline-spn-pw)
      AZURE_CLIENT_ID: $(hana-pipeline-spn-id)
      AZURE_SECRET: $(hana-pipeline-spn-pw)
      AZURE_TENANT: $(landscape-tenant)
      AZURE_SUBSCRIPTION_ID: $(landscape-subscription)
      ARM_CLIENT_ID: $(hana-pipeline-spn-id)
      ARM_CLIENT_SECRET: $(hana-pipeline-spn-pw)
      ARM_TENANT_ID: $(landscape-tenant)
      ARM_SUBSCRIPTION_ID: $(landscape-subscription)
